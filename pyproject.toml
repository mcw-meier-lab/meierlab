[project]
name = "meierlab"
version = "v0.1.0-beta"

description = "MCW Meier Lab tools"
authors = [
    {name = "MCW Meier Lab", email = "lespana@mcw.edu"},
]
dependencies = [
    "pandas>=2.1.0",
    "nilearn>=0.10.1",
    "numpy>=1.25.2",
    "nibabel>=5.1.0",
    "networkx>=3.1",
    "plotly>=5.16.1",
    "dash>=2.13.0",
    "jupyter-dash>=0.4.2",
    "matplotlib>=3.8.2",
    "nireports>=23.2.1",
    "traits==6.3",
]
requires-python = ">=3.10"
readme = "README.rst"
license = {text = "Apache-2.0"}

[project.optional-dependencies]
test=["pytest>=7.4.0","pytest-cov>=4.1.0"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
skip-string-normalization = true

[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
]
doc = [
    "sphinx>=7.2.5",
    "sphinx-autoapi>=2.1.1",
    "sphinx-rtd-theme>=1.3.0",
    "flake8-docstrings>=1.7.0",
    "sphinx-design>=0.5.0",
    "sphinx-gallery>=0.14.0",
    "numpydoc>=1.5.0",
    "furo>=2023.8.19",
    "myst-parser>=2.0.0",
    "sphinx-copybutton>=0.5.2",
]
dev = [
    "pre-commit>=3.3.3",
    "pip-tools>=7.4.1",
]
lint = [
    "ruff>=0.5.4",
]
[tool.pytest.ini_options]
markers = [
    "download: actually download data"
]
minversion = "7.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "info"
testpaths = [
  "tests",
]

[tool.bumpver]
current_version = "0.1.0-beta"
version_pattern = "MAJOR.MINOR.PATCH[-TAG]"
commit_message = "bump version {old_version} -> {new_version}"
tag_message = "{new_version}"
tag_scope = "default"
pre_commit_hook = ""
post_commit_hook = ""
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
]
"README.rst" = [
    "{version}",
    "{pep440_version}",
]
[tool.ruff]
src = ["src"]
lint.extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "PGH",         # pygrep-hooks
  "RUF",         # Ruff-specific
  "UP",          # pyupgrade
]
